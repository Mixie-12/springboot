name: Build & Push to Artifact Registry

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write   # required for OIDC to GCP

env:
  REGION: ${{ vars.REGION || 'europe-north1' }}
  GAR_REPO: ${{ vars.GAR_REPO || 'spring-demo' }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME || 'demo' }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Authenticate to GCP via OIDC (no long-lived JSON key!)
      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use GAR
        run: gcloud auth configure-docker "${{ env.REGION }}-docker.pkg.dev" --quiet

      # Build & tag
      # Adjust context/Dockerfile path: here we build the Spring app under ./app using app/Dockerfile
      - name: Build image
        run: |
          IMAGE_BASE="${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.GAR_REPO }}/${{ env.IMAGE_NAME }}"
          GIT_SHA="${{ github.sha }}"
          DATE_TAG="$(date +'%Y%m%d-%H%M%S')"
          docker build -t "$IMAGE_BASE:$GIT_SHA" -t "$IMAGE_BASE:latest" -f app/Dockerfile app
          echo "IMAGE=$IMAGE_BASE:$GIT_SHA" >> $GITHUB_ENV
          echo "IMAGE_LATEST=$IMAGE_BASE:latest" >> $GITHUB_ENV

      - name: Push image
        run: |
          docker push "$IMAGE"
          docker push "$IMAGE_LATEST"

      - name: Print image name
        run: echo "Pushed $IMAGE and $IMAGE_LATEST"
